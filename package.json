{
  "name": "cpph-fileadder",
  "displayName": "(C/Cpp)/(H/Hpp) File Creator",
  "description": "Adds a context menu item to folders to add a C/Cpp and a H/Hpp file at the same time",
  "icon": "cpphIcont.png",
  "repository": "https://github.com/Snolandia/cpph-fileadder",
  "version": "1.0.0",
	"license": "MIT",
	"author": "Snolandia",
  "publisher": "Snolandia",
  "engines": {
    "vscode": "^1.96.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "cpp-organizer.addCHFile",
        "title": "New .c/.h file"
      },
      {
        "command": "cpp-organizer.addCppHFile",
        "title": "New .cpp/.h file"
      },
      {
        "command": "cpp-organizer.addCppHppFile",
        "title": "New .cpp/.hpp file"
      }
    ],
    "menus": {
      "explorer/context": [
        {
          "when": "explorerResourceIsFolder",
          "command": "cpp-organizer.addCHFile",
          "group": "1_cppOrganizer"
        },
        {
          "when": "explorerResourceIsFolder",
          "command": "cpp-organizer.addCppHFile",
          "group": "1_cppOrganizer"
        },
        {
          "when": "explorerResourceIsFolder",
          "command": "cpp-organizer.addCppHppFile",
          "group": "1_cppOrganizer"
        }
      ]
    },
    "configuration": {
      "title": "cppOrganizer",
      "properties": {
        "cppOrganizer.createIncludeGuards": {
          "type": "boolean",
          "default": true,
          "description": "When creating an .h(pp) file, also add include guards to the file."
        },
        "cppOrganizer.openHeaderFileAfterCreation": {
          "type": "boolean",
          "default": true,
          "description": "When creating an .h(pp) file, open that file after it has been created."
        },
        "cppOrganizer.openCppFileAfterCreation": {
          "type": "boolean",
          "default": true,
          "description": "When creating a .c(pp) file, open that file after it has been created."
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/vscode": "^1.96.0",
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@typescript-eslint/eslint-plugin": "^8.17.0",
    "@typescript-eslint/parser": "^8.17.0",
    "eslint": "^9.16.0",
    "typescript": "^5.7.2",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1"
  }
}
